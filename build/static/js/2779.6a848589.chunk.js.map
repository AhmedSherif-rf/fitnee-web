{"version":3,"file":"static/js/2779.6a848589.chunk.js","mappings":"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","sources":["Shared/ContactUs/data/initialValue.js","Shared/ContactUs/data/validation.js","Shared/ContactUs/ContactUsForm.jsx","Shared/ContactUs/ContactUsWrapper.jsx","Pages/Auth/ContactUs/index.jsx","webpack://fitnee-web/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/index.jsx","Shared/PhoneInputField/index.jsx","Shared/TranslationHelper/index.jsx"],"sourcesContent":["export const INITIAL_VALUES = {\r\n  email: \"\",\r\n  phone: \"\",\r\n  message: \"\",\r\n  last_name: \"\",\r\n  first_name: \"\",\r\n};\r\n","import * as Yup from \"yup\";\r\nimport TranslationHelper from \"../../TranslationHelper\";\r\nexport const CONTACT_US_SCHEMA = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .matches(/^[A-Za-z ]+$/,  TranslationHelper(\"validation.invalidFirstNameText\"))\r\n    .min(2, TranslationHelper(\"validation.tooShortText\"))\r\n    .max(50, TranslationHelper(\"validation.tooLongText\"))\r\n    .required( TranslationHelper(\"validation.requiredFirstNameText\")),\r\n  last_name: Yup.string()\r\n    .matches(/^[A-Za-z ]+$/, TranslationHelper(\"validation.invalidLastNameText\"))\r\n    .min(2,TranslationHelper(\"validation.tooShortText\"))\r\n    .max(50, TranslationHelper(\"validation.tooLongText\"))\r\n    .required( TranslationHelper(\"validation.requiredLastNameText\")),\r\n  email: Yup.string()\r\n    .matches(\r\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n      TranslationHelper(\"validation.invalidEmailText\")\r\n    )\r\n    .required( TranslationHelper(\"validation.requiredEmailText\")),\r\n  phone: Yup.string().required(TranslationHelper(\"validation.requiredContactText\")),\r\n  message: Yup.string()\r\n    .min(5, TranslationHelper(\"validation.tooShortText\"))\r\n    .max(500, TranslationHelper(\"validation.tooLongText\"))\r\n    .required(TranslationHelper(\"validation.requiredMessageText\")),\r\n});\r\n","import { Formik } from \"formik\";\r\nimport InputField from \"../InputField\";\r\nimport FillBtn from \"../Buttons/FillBtn\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport OutlineBtn from \"../Buttons/OutlineBtn\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInputField from \"../PhoneInputField\";\r\nimport { INITIAL_VALUES } from \"./data/initialValue\";\r\nimport { CONTACT_US_SCHEMA } from \"./data/validation\";\r\nimport { CONTACT_US_URL } from \"../../utils/constants\";\r\nimport { Col, Container, Form, Row } from \"reactstrap\";\r\nimport InformationModal from \"../Modal/InformationModal\";\r\nimport React, { memo, useCallback, useState } from \"react\";\r\nimport LoadingScreen from \"../../HelperMethods/LoadingScreen\";\r\nimport Images from \"../../HelperMethods/Constants/ImgConstants\";\r\nimport { contactUs } from \"../../Redux/features/ContactUs/contactUsApi\";\r\n\r\nconst ContactUsForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state?.contactUs);\r\n  const { t } = useTranslation(\"\");\r\n  const [showContactUsConfirmModal, setShowContactUsConfirmModal] = useState(\r\n    false\r\n  );\r\n\r\n  const handleCancelClick = useCallback(() => {\r\n    navigate(\"/\");\r\n  }, [navigate]);\r\n\r\n  const handleContactUsConfirmModalClose = useCallback(() => {\r\n    setShowContactUsConfirmModal(false);\r\n  }, []);\r\n\r\n  const handleContactUsSubmit = (values) => {\r\n    const data = {\r\n      apiEndpoint: CONTACT_US_URL,\r\n      requestData: JSON.stringify(values),\r\n      navigate,\r\n    };\r\n    dispatch(contactUs(data)).then((res) => {\r\n      if (res.type === \"contactUs/fulfilled\") {\r\n        setShowContactUsConfirmModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center align-items-center vh-100\">\r\n        {loading === \"pending\" && <LoadingScreen />}\r\n        <Col md={10} sm={10}>\r\n          <h1 className=\"text-center mb-5 f-w-bold \">{t(\"contactUs.contactUsText\")}</h1>\r\n          <Formik\r\n            initialValues={{ ...INITIAL_VALUES }}\r\n            validationSchema={CONTACT_US_SCHEMA}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setSubmitting(true);\r\n              handleContactUsSubmit(values);\r\n              resetForm();\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              setFieldValue,\r\n              handleBlur,\r\n              handleSubmit,\r\n            }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Row md={12}>\r\n                  <Col md={6} className=\"mb-2\">\r\n                    <InputField\r\n                      className=\"py-3 px-5\"\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      placeholder={t(\"contactUs.firstNameText\")}\r\n                      onChangeHandle={handleChange}\r\n                      onBlurHandle={handleBlur}\r\n                      value={values.first_name}\r\n                      icon={<img src={Images.PERSON_ICON} alt=\"\" />}\r\n                    />\r\n                    <p className=\"errorField\">\r\n                      {errors.first_name &&\r\n                        touched.first_name &&\r\n                        errors.first_name}\r\n                    </p>\r\n                  </Col>\r\n                  <Col md={6} className=\"mb-2\">\r\n                    <InputField\r\n                      className=\"py-3 px-5\"\r\n                      type=\"text\"\r\n                      placeholder={t(\"contactUs.lastNameText\")}\r\n                      name=\"last_name\"\r\n                      onChangeHandle={handleChange}\r\n                      onBlurHandle={handleBlur}\r\n                      value={values.last_name}\r\n                      icon={<img src={Images.PERSON_ICON} alt=\"\" />}\r\n                    />\r\n                    <p className=\"errorField\">\r\n                      {errors.last_name &&\r\n                        touched.last_name &&\r\n                        errors.last_name}\r\n                    </p>\r\n                  </Col>\r\n                  <Col md={12} className=\"mb-2\">\r\n                    <InputField\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      placeholder={t(\"contactUs.EmailOnlyText\")}\r\n                      onChangeHandle={handleChange}\r\n                      onBlurHandle={handleBlur}\r\n                      value={values.email}\r\n                      icon={<img src={Images.EMAIL_ICON} alt=\"email-icon\" />}\r\n                      className={\"py-3 px-5\"}\r\n                    />\r\n                    <p className=\"errorField\">\r\n                      {errors.email && touched.email && errors.email}\r\n                    </p>\r\n                  </Col>\r\n                  <Col md={12} className=\"mb-2\">\r\n                    <PhoneInputField\r\n                      inputProps={{\r\n                        name: \"phone\",\r\n                        required: true,\r\n                        className:\r\n                          \"form-control-lg w-100 py-3 px-4 customPhoneInput\",\r\n                      }}\r\n                      defaultCountry={\"ae\"}\r\n                      value={values.phone}\r\n                      setFieldValue={setFieldValue}\r\n                    />\r\n                    <p className=\"errorField\">\r\n                      {errors.phone && touched.phone && errors.phone}\r\n                    </p>\r\n                  </Col>\r\n                  <Col md={12} className=\"mb-2\">\r\n                    <InputField\r\n                      type=\"textarea\"\r\n                      name=\"message\"\r\n                      placeholder={t(\"contactUs.describeIssueText\")}\r\n                      onChangeHandle={handleChange}\r\n                      onBlurHandle={handleBlur}\r\n                      value={values.message}\r\n                      className={\"p-3\"}\r\n                      rows={\"5\"}\r\n                    />\r\n                    <p className=\"errorField\">\r\n                      {errors.message && touched.message && errors.message}\r\n                    </p>\r\n                  </Col>\r\n                  <Col md={12} className=\"mb-2 mt-3\">\r\n                    <FillBtn\r\n                      className=\"w-100 py-3\"\r\n                      text={t(\"contactUs.sendText\")}\r\n                      disabled={loading === \"pending\" ? true : false}\r\n                      type={\"submit\"}\r\n                    />\r\n                  </Col>\r\n                  <Col md={12} className=\"mb-2\">\r\n                    <OutlineBtn\r\n                      className=\"w-100 py-3\"\r\n                      handleOnClick={handleCancelClick}\r\n                      text={t(\"contactUs.cancelText\")}\r\n                    />\r\n                  </Col>\r\n\r\n                  <InformationModal\r\n                    size={\"md\"}\r\n                    TOneClassName={\"mb-3 text-center\"}\r\n                    isOpen={showContactUsConfirmModal}\r\n                    onClose={handleContactUsConfirmModalClose}\r\n                    ModalTextOne={t(\"contactUs.modalOneText\")}\r\n                    ButtonThree={\r\n                      <FillBtn\r\n                        className=\"w-50\"\r\n                        text={\"Ok\"}\r\n                        handleOnClick={handleContactUsConfirmModalClose}\r\n                      />\r\n                    }\r\n                  />\r\n                </Row>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(ContactUsForm);\r\n","import React, { memo } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport ContactUsForm from \"./ContactUsForm\";\r\n\r\nconst ContactUsWrapper = (props) => {\r\n  const { CompStyle, text1, text2, text3 } = props;\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Col md={6} xs={12} className=\"p-0 d-md-block d-none\">\r\n        <div\r\n          className=\"d-flex flex-column justify-content-between bgProperties h-100 py-4\"\r\n          style={CompStyle}\r\n        >\r\n          <div>{text1}</div>\r\n          <div>{text2}</div>\r\n          <div>{text3}</div>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md={6} xs={12} className=\"p-0\">\r\n        <ContactUsForm />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default memo(ContactUsWrapper);\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Images from \"../../../HelperMethods/Constants/ImgConstants\";\r\nimport ContactUsWrapper from \"../../../Shared/ContactUs/ContactUsWrapper\";\r\n\r\nconst ContactUs = () => {\r\n  const { t } = useTranslation(\"\");\r\n\r\n  const ContactUsData = [\r\n    {\r\n      CompStyle: { backgroundImage: `url(${Images.LOGIN_BG_IMG})` },\r\n      text1: (\r\n        <div className=\"text-center\">\r\n          <Link to=\"/\">\r\n            <img\r\n              className=\"img-fluid w-25 m-3\"\r\n              src={Images.LOGO_IMG}\r\n              alt={\"\"}\r\n            />\r\n          </Link>\r\n        </div>\r\n      ),\r\n      text2: (\r\n        <div className=\"text-center\">\r\n          <h1 className=\"fw-bold text-white\">\r\n            {t(\"contactUs.unlockYourPotentialText\")}\r\n          </h1>\r\n          <span className=\"fs-4 text-white fst-italic\">\r\n            & {t(\"contactUs.transformYourBodyText\")}\r\n          </span>\r\n        </div>\r\n      ),\r\n      text3: <h6 className=\"small text-center text-white\">www.fitnee.com</h6>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container fluid className=\"vh-100\">\r\n      {ContactUsData?.map((item) => (\r\n        <ContactUsWrapper\r\n          CompStyle={item.CompStyle}\r\n          text1={item.text1}\r\n          text2={item.text2}\r\n          text3={item.text3}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"style_inputWrapper__1fbZb\",\"iconWrapper\":\"style_iconWrapper__6LRYC\",\"inputDesign\":\"style_inputDesign__pSaVq\"};","import { Input } from \"reactstrap\";\r\nimport React, { memo } from \"react\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst InputField = (props) => {\r\n  const {\r\n    placeholder,\r\n    type,\r\n    onChangeHandle,\r\n    onBlurHandle,\r\n    value,\r\n    name,\r\n    className,\r\n    icon,\r\n    disabled,\r\n    style,\r\n    rows,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`${styles.inputWrapper}`}>\r\n      {icon && <div className={styles.iconWrapper}>{icon}</div>}\r\n      <Input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        style={style}\r\n        className={`form-control-lg  w-100 ${styles.inputDesign} ${className}`}\r\n        disabled={disabled}\r\n        onChange={onChangeHandle}\r\n        onBlur={onBlurHandle}\r\n        value={value}\r\n        rows={rows}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(InputField);\r\n","import { memo } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst PhoneInputField = (props) => {\r\n  const { value, setFieldValue, defaultCountry, inputProps, className } = props;\r\n\r\n  return (\r\n    <PhoneInput\r\n      inputProps={{\r\n        ...inputProps,\r\n      }}\r\n      country={defaultCountry}\r\n      value={value}\r\n      className={`${className}`}\r\n      onChange={(value) => setFieldValue(\"phone\", value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(PhoneInputField);\r\n","import i18n from \"i18next\";\r\n\r\nconst TranslationHelper = (stringKey) => {\r\n  return i18n.t(stringKey);\r\n};\r\n\r\nexport default TranslationHelper;\r\n"],"names":["INITIAL_VALUES","email","phone","message","last_name","first_name","CONTACT_US_SCHEMA","Yup","shape","matches","TranslationHelper","min","max","required","ContactUsForm","navigate","useNavigate","dispatch","useDispatch","loading","useSelector","state","contactUs","t","useTranslation","_useState","useState","_useState2","_slicedToArray","showContactUsConfirmModal","setShowContactUsConfirmModal","handleCancelClick","useCallback","handleContactUsConfirmModalClose","_jsx","Container","children","_jsxs","Row","className","LoadingScreen","Col","md","sm","Formik","initialValues","_objectSpread","validationSchema","onSubmit","values","_ref","setSubmitting","resetForm","data","apiEndpoint","CONTACT_US_URL","requestData","JSON","stringify","then","res","type","handleContactUsSubmit","_ref2","errors","touched","handleChange","setFieldValue","handleBlur","handleSubmit","Form","InputField","name","placeholder","onChangeHandle","onBlurHandle","value","icon","src","Images","PERSON_ICON","alt","EMAIL_ICON","PhoneInputField","inputProps","defaultCountry","rows","FillBtn","text","disabled","OutlineBtn","handleOnClick","InformationModal","size","TOneClassName","isOpen","onClose","ModalTextOne","ButtonThree","memo","ContactUsWrapper","props","CompStyle","text1","text2","text3","xs","style","ContactUsData","backgroundImage","concat","LOGIN_BG_IMG","Link","to","LOGO_IMG","fluid","map","item","styles","Input","onChange","onBlur","PhoneInput","country","stringKey","i18n"],"sourceRoot":""}