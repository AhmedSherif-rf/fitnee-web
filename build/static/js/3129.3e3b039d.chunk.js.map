{"version":3,"file":"static/js/3129.3e3b039d.chunk.js","mappings":"gSAmCA,EAhCsB,SAACA,GACrB,IACEC,EAMED,EANFC,QACAC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,WACAC,EAEEL,EAFFK,cACAC,EACEN,EADFM,cAEF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,UAAS,4BAAAC,OAA8BN,GAAaO,UACxDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACH,UAAS,GAAAC,OAAKL,GAAgBM,UACtCE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oDAAmDE,SAAA,EAChEE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,QAAOE,SAAA,EACpBJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,yBAAwBE,UACrCJ,EAAAA,EAAAA,KAAA,MAAIE,UAAS,eAAiBE,SAAEV,OAElCM,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBE,UACpCJ,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kBAAiBE,SAAET,UAGpCK,EAAAA,EAAAA,KAAA,OACEE,UAAS,+DAAAC,OAAiEJ,GAAgBK,SAEzFR,UAMb,EC2CA,EAlEkB,SAACH,GACjB,IAAMc,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA7CH,SAERI,EAAAA,EAAAA,YAAU,WACRC,GAEF,GAAG,IAEH,IAAMA,EAAyB,WAC7B,IAAMC,EAAO,CACXC,YAAaC,EAAAA,wBAGfV,GAASW,EAAAA,EAAAA,IAAqBH,GAChC,EAEA,OACET,EAAAA,EAAAA,MAACa,EAAAA,EAAS,CAAAf,SAAA,CACK,YAAZK,IAAyBT,EAAAA,EAAAA,KAACoB,EAAAA,EAAa,KACxCd,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACnB,UAAU,OAAME,SAAA,EACnBJ,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvB,UAAU,OAAME,UACxCJ,EAAAA,EAAAA,KAAC0B,EAAa,CACZ7B,WAAW,YACXC,cAAc,gBACdC,cAAc,WACdH,UAAUI,EAAAA,EAAAA,KAAC2B,EAAAA,IAAM,CAACC,KAAM,KACxBlC,QAAQ,KACRC,QAAQ,mBAGZK,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvB,UAAU,OAAME,UACxCJ,EAAAA,EAAAA,KAAC0B,EAAa,CACZ7B,WAAW,YACXC,cAAc,gBACdC,cAAc,WACdH,UAAUI,EAAAA,EAAAA,KAAC6B,EAAAA,IAAS,CAACD,KAAM,KAC3BlC,QAAQ,KACRC,QAAQ,wBAGZK,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvB,UAAU,OAAME,UACxCJ,EAAAA,EAAAA,KAAC0B,EAAa,CACZ7B,WAAW,YACXC,cAAc,gBACdC,cAAc,WACdH,UAAUI,EAAAA,EAAAA,KAAC8B,EAAAA,GAAO,CAACF,KAAM,KACzBlC,QAAQ,KACRC,QAAQ,mBAGZK,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvB,UAAU,OAAME,UACxCJ,EAAAA,EAAAA,KAAC0B,EAAa,CACZ7B,WAAW,YACXC,cAAc,gBACdC,cAAc,WACdH,UAAUI,EAAAA,EAAAA,KAAC+B,EAAAA,IAAmB,CAACH,KAAM,KACrClC,QAAQ,KACRC,QAAQ,0BAMpB,C","sources":["Shared/AdminShared/Components/DashboardCard/index.jsx","Pages/AdminPages/Dashboard/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\n\r\nconst DashboardCard = (props) => {\r\n  const {\r\n    textOne,\r\n    textTwo,\r\n    cardIcon,\r\n    AdminClass,\r\n    CardBodyClass,\r\n    cardIconClass,\r\n  } = props;\r\n  return (\r\n    <Card className={`onlyBorderRadius h-100   ${AdminClass}`}>\r\n      <CardBody className={`${CardBodyClass}`}>\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <div className=\"w-100\">\r\n            <div className=\"w-100 text-start px-2 \">\r\n              <h4 className={`fw-bold mb-0`}>{textOne}</h4>\r\n            </div>\r\n            <div className=\"w-100 text-start px-2\">\r\n              <p className=\"small mb-0 mt-2\">{textTwo}</p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`d-flex align-items-center justify-content-center textYellow ${cardIconClass}`}\r\n          >\r\n            {cardIcon}\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { AiOutlineUserSwitch } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaUser, FaRegUser, FaUsers } from \"react-icons/fa\";\r\nimport LoadingScreen from \"../../../HelperMethods/LoadingScreen\";\r\nimport { USER_NOTIFICATIONS_URL } from \"../../../utils/constants\";\r\nimport { getUserNotifications } from \"../../../Redux/features/User/userApi\";\r\nimport DashboardCard from \"../../../Shared/AdminShared/Components/DashboardCard\";\r\n\r\nconst Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    fetchUserNotifications();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchUserNotifications = () => {\r\n    const data = {\r\n      apiEndpoint: USER_NOTIFICATIONS_URL,\r\n    };\r\n\r\n    dispatch(getUserNotifications(data));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {loading === \"pending\" && <LoadingScreen />}\r\n      <Row className=\"py-3\">\r\n        <Col xl={3} lg={4} md={6} className=\"mb-3\">\r\n          <DashboardCard\r\n            AdminClass=\"AdminCard\"\r\n            CardBodyClass=\"AdminCardBody\"\r\n            cardIconClass=\"cardIcon\"\r\n            cardIcon={<FaUser size={60} />}\r\n            textOne=\"45\"\r\n            textTwo=\"Active User\"\r\n          />\r\n        </Col>\r\n        <Col xl={3} lg={4} md={6} className=\"mb-3\">\r\n          <DashboardCard\r\n            AdminClass=\"AdminCard\"\r\n            CardBodyClass=\"AdminCardBody\"\r\n            cardIconClass=\"cardIcon\"\r\n            cardIcon={<FaRegUser size={60} />}\r\n            textOne=\"05\"\r\n            textTwo=\"Non-Active Users\"\r\n          />\r\n        </Col>\r\n        <Col xl={3} lg={4} md={6} className=\"mb-3\">\r\n          <DashboardCard\r\n            AdminClass=\"AdminCard\"\r\n            CardBodyClass=\"AdminCardBody\"\r\n            cardIconClass=\"cardIcon\"\r\n            cardIcon={<FaUsers size={65} />}\r\n            textOne=\"04\"\r\n            textTwo=\"Subscribers\"\r\n          />\r\n        </Col>\r\n        <Col xl={3} lg={4} md={6} className=\"mb-3\">\r\n          <DashboardCard\r\n            AdminClass=\"AdminCard\"\r\n            CardBodyClass=\"AdminCardBody\"\r\n            cardIconClass=\"cardIcon\"\r\n            cardIcon={<AiOutlineUserSwitch size={65} />}\r\n            textOne=\"02\"\r\n            textTwo=\"Re-Subscribers\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["props","textOne","textTwo","cardIcon","AdminClass","CardBodyClass","cardIconClass","_jsx","Card","className","concat","children","CardBody","_jsxs","dispatch","useDispatch","loading","useSelector","state","user","useEffect","fetchUserNotifications","data","apiEndpoint","USER_NOTIFICATIONS_URL","getUserNotifications","Container","LoadingScreen","Row","Col","xl","lg","md","DashboardCard","FaUser","size","FaRegUser","FaUsers","AiOutlineUserSwitch"],"sourceRoot":""}