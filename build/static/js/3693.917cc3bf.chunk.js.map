{"version":3,"file":"static/js/3693.917cc3bf.chunk.js","mappings":"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","sources":["Shared/AdminShared/Components/Message/index.jsx","Pages/AdminPages/Community/index.jsx","Shared/Headings/PageHeading/index.jsx"],"sourcesContent":["import \"./styles.scss\";\r\nimport moment from \"moment\";\r\nimport { memo } from \"react\";\r\nimport Images from \"../../../../HelperMethods/Constants/ImgConstants\";\r\n\r\nconst Member = ({ message, member }) => {\r\n  return (\r\n    <div className=\"d-flex gap-2 py-2\">\r\n      <div\r\n        className=\"bgProperties rounded-circle\"\r\n        style={{\r\n          backgroundImage:\r\n            member?.avatar === null\r\n              ? `url(${Images.USER_DUMMY_IMG})`\r\n              : `url(${member?.avatar})`,\r\n          width: \"35px\",\r\n          height: \"35px\",\r\n        }}\r\n      ></div>\r\n      <div className=\"d-flex flex-column\">\r\n        <small>{member?.name}</small>\r\n        {message.messageType === \"TEXT\" && (\r\n          <small className=\"messageWrapper\">{message.messageText}</small>\r\n        )}\r\n        {message.messageType === \"IMAGE\" && (\r\n          <div className=\"messageWrapper\">\r\n            <div\r\n              className=\"bgProperties\"\r\n              style={{\r\n                backgroundImage:\r\n                  message?.mediaUrl === null\r\n                    ? `url(${Images.USER_DUMMY_IMG})`\r\n                    : `url(${message?.mediaUrl})`,\r\n                width: \"80px\",\r\n                height: \"100px\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        )}\r\n        <small>{moment(message.messageTime).format(\"h:mm A\")}</small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Member);\r\n","import \"./styles.scss\";\r\nimport { db } from \"../../../firebase\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PageHeading from \"../../../Shared/Headings/PageHeading\";\r\nimport { onValue, ref, orderByChild } from \"firebase/database\";\r\nimport Images from \"../../../HelperMethods/Constants/ImgConstants\";\r\nimport Message from \"../../../Shared/AdminShared/Components/Message\";\r\n\r\nconst Community = (props) => {\r\n  const [members, setMembers] = useState([]);\r\n  const [groupMembers, setGroupMembers] = useState([]);\r\n  const [groupMessages, setGroupMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const query = ref(db, \"GroupMessages\", orderByChild(\"messageTime\"));\r\n    return onValue(query, (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      if (snapshot.exists()) {\r\n        Object.values(data).map((item, index) =>\r\n          setGroupMessages([...groupMessages, item])\r\n        );\r\n      }\r\n    });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const query = ref(db, \"Groups\");\r\n    return onValue(query, (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      if (snapshot.exists()) {\r\n        const groupKeys = Object.keys(data);\r\n        const groupId = groupKeys[0];\r\n        setGroupMembers(data[groupId].usersIds);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const query = ref(db, \"Users\");\r\n    return onValue(query, (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      if (snapshot.exists()) {\r\n        const usersArray = Object.values(data);\r\n        const members = usersArray.map((user) => user);\r\n        setMembers(members);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getMemberData = (memberId) => {\r\n    const member = members.find((member) => {\r\n      return member.userId === memberId;\r\n    });\r\n\r\n    return member;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className=\"adminDashBoardScrolling\">\r\n        <Row>\r\n          <Col md={5}>\r\n            <PageHeading\r\n              headingText=\"Members\"\r\n              categoryText=\"\"\r\n              className=\"text-start\"\r\n            />\r\n            <Row className=\"gap-2\">\r\n              {groupMembers.map((groupMember, index) => {\r\n                const member = getMemberData(groupMember);\r\n                const teamMemberCssClass =\r\n                  (index + 1) % 2 === 0\r\n                    ? (index + 1) % 4 === 0\r\n                      ? \"teamMemberWrapperFirst\"\r\n                      : \"teamMemberWrapperFourth\"\r\n                    : (index + 1) % 3 === 0\r\n                    ? \"teamMemberWrapperSecond\"\r\n                    : \"teamMemberWrapperThird\";\r\n\r\n                return (\r\n                  <Col\r\n                    md={5}\r\n                    sm={12}\r\n                    key={index}\r\n                    className={`d-flex gap-3 align-items-center py-1 ${teamMemberCssClass}`}\r\n                  >\r\n                    <div\r\n                      className=\"bgProperties rounded-circle\"\r\n                      style={{\r\n                        backgroundImage:\r\n                          member?.avatar === null\r\n                            ? `url(${Images.USER_DUMMY_IMG})`\r\n                            : `url(${member?.avatar})`,\r\n                        width: \"40px\",\r\n                        height: \"40px\",\r\n                      }}\r\n                    ></div>\r\n                    <small>{member?.name}</small>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Col>\r\n          <Col md={7}>\r\n            <PageHeading\r\n              headingText=\"Community Chat\"\r\n              categoryText=\"\"\r\n              className=\"text-start\"\r\n            />\r\n            {groupMessages.map((messages, index) => {\r\n              return Object.values(messages).map((message, index) => {\r\n                const member = getMemberData(message.messageFrom);\r\n                return (\r\n                  <Col md={12} className=\"text-start\" key={index}>\r\n                    <Message member={member} message={message} />\r\n                  </Col>\r\n                );\r\n              });\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Community;\r\n","import \"./styles.scss\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst PageHeading = (props) => {\r\n  const { headingText, categoryText, className, style } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <h2\r\n        className={`fw-bold text-black-custom p-3 mb-0 ${className} heading`}\r\n        style={{ style, textTransform: \"camelCase\" }}\r\n      >\r\n        {headingText}\r\n        {categoryText && (\r\n          <span\r\n            className=\"text-muted h6 fw-bold\"\r\n            style={{ style, textTransform: \"camelCase\" }}\r\n          >{`${categoryText}`}</span>\r\n        )}\r\n      </h2>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default memo(PageHeading);\r\n"],"names":["Member","_ref","message","member","_jsxs","className","children","_jsx","style","backgroundImage","avatar","concat","Images","USER_DUMMY_IMG","width","height","name","messageType","messageText","mediaUrl","moment","messageTime","format","memo","props","_useState","useState","_useState2","_slicedToArray","members","setMembers","_useState3","_useState4","groupMembers","setGroupMembers","_useState5","_useState6","groupMessages","setGroupMessages","useEffect","query","ref","db","orderByChild","onValue","snapshot","data","val","exists","Object","values","map","item","index","_toConsumableArray","groupId","keys","usersIds","user","getMemberData","memberId","find","userId","React","Container","Row","Col","md","PageHeading","headingText","categoryText","groupMember","teamMemberCssClass","sm","messages","messageFrom","Message","textTransform"],"sourceRoot":""}