{"version":3,"file":"static/js/7605.c71a1fd8.chunk.js","mappings":"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","sources":["Shared/BMICalculationWrapper/index.jsx","Pages/GuestPages/BMI/index.jsx","Shared/Headings/PageHeading/index.jsx","Shared/PhoneInputField/index.jsx","../node_modules/reactstrap/esm/CardBody.js","../node_modules/reactstrap/esm/CardHeader.js"],"sourcesContent":["import { Formik } from \"formik\";\r\nimport InputField from \"../InputField\";\r\nimport FillBtn from \"../Buttons/FillBtn\";\r\nimport React, { memo, useState } from \"react\";\r\nimport OutlineBtn from \"../Buttons/OutlineBtn\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInputField from \"../PhoneInputField\";\r\nimport PageHeading from \"../Headings/PageHeading\";\r\nimport { SEND_HEALTH_RESULT } from \"../../utils/constants\";\r\nimport { BMI_INITIAL_VALUES } from \"../ValidationData/initialValue\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InformationModal from \"../Modal/InformationModal\";\r\nimport { BMI_SCHEMA } from \"../ValidationData/validation\";\r\nimport LoadingScreen from \"../../HelperMethods/LoadingScreen\";\r\nimport { sendHealthCheckEmail } from \"../../Redux/features/User/userApi\";\r\n\r\nconst BMICalculationWrapper = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { t, i18n } = useTranslation(\"\");\r\n\r\n  const { loading } = useSelector((state) => state.user);\r\n  const { lang: currentLanguage } = useSelector((state) => state.language);\r\n\r\n  const [showInfoModal, setShowInfoModal] = useState(false);\r\n\r\n  const handleCloseInfoModal = () => setShowInfoModal(false);\r\n\r\n  const handleBMISubmit = (values, resetForm) => {\r\n    const heightInMeters = values.height / 100;\r\n    const bmi = (values.weight / (heightInMeters * heightInMeters)).toFixed(2);\r\n    let result = \"\";\r\n\r\n    if (bmi < 18.5) {\r\n      result = \"Underweight\";\r\n    } else if (bmi >= 18.5 && bmi <= 24.9) {\r\n      result = \"Normal weight\";\r\n    } else if (bmi >= 25.0 && bmi <= 29.9) {\r\n      result = \"Overweight\";\r\n    } else {\r\n      result = \"Obese\";\r\n    }\r\n\r\n    const data = {\r\n      apiEndpoint: SEND_HEALTH_RESULT,\r\n      requestData: JSON.stringify({\r\n        ...values,\r\n        type: \"bmi\",\r\n        value: bmi,\r\n        result,\r\n        lang: currentLanguage,\r\n      }),\r\n    };\r\n\r\n    dispatch(sendHealthCheckEmail(data)).then((res) => {\r\n      if (res.type === \"sendHealthCheckEmail/fulfilled\") {\r\n        resetForm(true);\r\n        setShowInfoModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={`text-black-custom py-4`}>\r\n      <Row\r\n        className={`justify-content-center text-black-custom`}\r\n        style={{ minHeight: \"100vh\", maxHeight: \"auto\" }}\r\n      >\r\n        {loading === \"pending\" && <LoadingScreen />}\r\n        <Col md={10} className={`d-flex`}>\r\n          <Card className=\"px-md-4 px-1 py-md-5 py-4 mb-2 onlyBorderRadius d-flex justify-content-center w-100\">\r\n            <CardHeader className=\"bg-transparent text-center border-0 p-0 my-md-3 my-1\">\r\n              <PageHeading\r\n                headingText={t(\"calculation.isYourWeightRangeText\")}\r\n              />\r\n            </CardHeader>\r\n            <CardBody className=\"w-100\">\r\n              <Formik\r\n                initialValues={{ ...BMI_INITIAL_VALUES }}\r\n                validationSchema={BMI_SCHEMA}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                  setSubmitting(true);\r\n                  handleBMISubmit(values, resetForm);\r\n                }}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleBlur,\r\n                  handleChange,\r\n                  handleSubmit,\r\n                  setFieldValue,\r\n                }) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Card\r\n                      className={`border-0 bg-white onlyBorderRadius mb-2 ${i18n.dir()}`}\r\n                    >\r\n                      <CardBody className=\"p-md-2 p-0\">\r\n                        <Row>\r\n                          <Col md={6} className=\"mt-1\">\r\n                            <div>{t(\"calculation.weightText\")}</div>\r\n                            <InputField\r\n                              type=\"number\"\r\n                              name=\"weight\"\r\n                              onChangeHandle={handleChange}\r\n                              onBlurHandle={handleBlur}\r\n                              value={values.weight}\r\n                              className={\r\n                                \"form-control-lg BorderRadiusInput py-3 px-3 mb-1\"\r\n                              }\r\n                            />\r\n                            <p className=\"errorField\">\r\n                              {t(errors.weight) &&\r\n                                touched.weight &&\r\n                                t(errors.weight)}\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={6} className=\"mt-1\">\r\n                            <div>{t(\"calculation.heightText\")}</div>\r\n                            <InputField\r\n                              type=\"number\"\r\n                              name=\"height\"\r\n                              onChangeHandle={handleChange}\r\n                              onBlurHandle={handleBlur}\r\n                              value={values.height}\r\n                              className={\r\n                                \"form-control-lg BorderRadiusInput py-3 px-3 mb-1\"\r\n                              }\r\n                            />\r\n                            <p className=\"errorField\">\r\n                              {t(errors.height) &&\r\n                                touched.height &&\r\n                                t(errors.height)}\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={6} className=\"mt-1\">\r\n                            <div>{t(\"calculation.emailText\")}</div>\r\n                            <InputField\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              onChangeHandle={handleChange}\r\n                              onBlurHandle={handleBlur}\r\n                              value={values.email}\r\n                              className={\r\n                                \"form-control-lg BorderRadiusInput py-3 px-3 mb-1\"\r\n                              }\r\n                            />\r\n                            <p className=\"errorField\">\r\n                              {t(errors.email) &&\r\n                                touched.email &&\r\n                                t(errors.email)}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n                          <Col md={6} className=\"mt-1\">\r\n                            <div>{t(\"calculation.nameText\")}</div>\r\n                            <InputField\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              onChangeHandle={handleChange}\r\n                              onBlurHandle={handleBlur}\r\n                              value={values.name}\r\n                              className={\r\n                                \"form-control-lg BorderRadiusInput py-3 px-3\"\r\n                              }\r\n                            />\r\n                            <p className=\"errorField\">\r\n                              {t(errors.name) && touched.name && t(errors.name)}\r\n                            </p>\r\n                          </Col>\r\n                          <Col lg={6} md={6} className=\"mt-1\">\r\n                            <div>{t(\"calculation.phoneNumberText\")}</div>\r\n                            <PhoneInputField\r\n                              inputProps={{\r\n                                name: \"phone_number\",\r\n                                required: true,\r\n                                className:\r\n                                  \"form-control-lg w-100 py-3 px-4 customPhoneInput border\",\r\n                              }}\r\n                              defaultCountry={\"sa\"}\r\n                              value={values.phone_number}\r\n                              setFieldValue={setFieldValue}\r\n                            />\r\n                            <p className=\"errorField\">\r\n                              {t(errors.phone_number) &&\r\n                                touched.phone_number &&\r\n                                t(errors.phone_number)}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"text-center\">\r\n                          <FillBtn\r\n                            className=\"w-50 py-2 mt-5 mb-2 text-center mx-2\"\r\n                            text={t(\"calculation.submitText\")}\r\n                            disabled={loading === \"pending\" ? true : false}\r\n                            type={\"submit\"}\r\n                          />\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n              <div className=\"text-center\">\r\n                <OutlineBtn\r\n                  className=\"w-50 py-2\"\r\n                  text={t(\"calculation.backText\")}\r\n                  handleOnClick={() => navigate(\"/\")}\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <InformationModal\r\n        size={\"md\"}\r\n        TOneClassName={\"mb-4 fs-5 text-center\"}\r\n        className={\"p-4\"}\r\n        isOpen={showInfoModal}\r\n        onClose={handleCloseInfoModal}\r\n        ModalTextOne={t(\"guest.resultSendText\")}\r\n        ButtonOne={\r\n          <FillBtn\r\n            text={t(\"otpVerification.okayText\")}\r\n            className=\"py-2 px-5\"\r\n            handleOnClick={handleCloseInfoModal}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(BMICalculationWrapper);\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport BMICalculationWrapper from \"../../../Shared/BMICalculationWrapper\";\r\n\r\nconst BMI = (props) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={12}>\r\n          <BMICalculationWrapper />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import \"./styles.scss\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst PageHeading = (props) => {\r\n  const { headingText, categoryText, className, style } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <h2\r\n        className={`fw-bold text-black-custom p-3 mb-0 ${className} heading`}\r\n        style={{ style, textTransform: \"camelCase\" }}\r\n      >\r\n        {headingText}\r\n        {categoryText && (\r\n          <span\r\n            className=\"text-muted h6 fw-bold\"\r\n            style={{ style, textTransform: \"camelCase\" }}\r\n          >{`${categoryText}`}</span>\r\n        )}\r\n      </h2>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default memo(PageHeading);\r\n","import PhoneInput from \"react-phone-input-2\";\r\nimport { memo, useEffect, useState } from \"react\";\r\n\r\nconst PhoneInputField = (props) => {\r\n  const {\r\n    value,\r\n    setFieldValue,\r\n    defaultCountry,\r\n    inputProps,\r\n    className,\r\n    disabled,\r\n  } = props;\r\n\r\n  const [tempValue, setTempValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    setTempValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <PhoneInput\r\n      inputProps={{\r\n        ...inputProps,\r\n      }}\r\n      masks={{sa: '... ... ...'}}\r\n      onlyCountries={[defaultCountry]}\r\n      country={defaultCountry}\r\n      value={tempValue}\r\n      className={`${className} border ltr`}\r\n      onChange={(value) => setFieldValue(inputProps.name, value)}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(PhoneInputField);\r\n","var _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardBody(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    innerRef = props.innerRef,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCardBody.propTypes = propTypes;\nexport default CardBody;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardHeader(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardHeader.propTypes = propTypes;\nexport default CardHeader;"],"names":["BMICalculationWrapper","navigate","useNavigate","dispatch","useDispatch","_useTranslation","useTranslation","t","i18n","loading","useSelector","state","user","currentLanguage","language","lang","_useState","useState","_useState2","_slicedToArray","showInfoModal","setShowInfoModal","handleCloseInfoModal","_jsxs","Container","className","children","Row","style","minHeight","maxHeight","_jsx","LoadingScreen","Col","md","Card","CardHeader","PageHeading","headingText","CardBody","Formik","initialValues","_objectSpread","BMI_INITIAL_VALUES","validationSchema","BMI_SCHEMA","onSubmit","values","_ref","setSubmitting","resetForm","heightInMeters","height","bmi","weight","toFixed","result","data","apiEndpoint","SEND_HEALTH_RESULT","requestData","JSON","stringify","type","value","sendHealthCheckEmail","then","res","handleBMISubmit","_ref2","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","Form","concat","dir","InputField","name","onChangeHandle","onBlurHandle","email","lg","PhoneInputField","inputProps","required","defaultCountry","phone_number","FillBtn","text","disabled","OutlineBtn","handleOnClick","InformationModal","size","TOneClassName","isOpen","onClose","ModalTextOne","ButtonOne","memo","props","fluid","categoryText","React","textTransform","tempValue","setTempValue","useEffect","PhoneInput","masks","sa","onlyCountries","country","onChange","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","innerRef","tag","tagPropType","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","ref"],"sourceRoot":""}