{"version":3,"file":"static/js/8394.5d9082dc.chunk.js","mappings":"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","sources":["Pages/TraineePages/ResetPassword/index.jsx","Shared/ResetPassword/ResetPasswordForm.jsx","Shared/ResetPassword/ResetPasswordWrapper.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Card } from \"reactstrap\";\r\nimport ResetPasswordWrapper from \"../../../Shared/ResetPassword/ResetPasswordWrapper\";\r\n\r\nconst ResetPassword = () => {\r\n  return (\r\n    <Container fluid className=\"vh-100\">\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"contentCard BorderRadius\">\r\n            <ResetPasswordWrapper />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ResetPassword;\r\n","import { Formik } from \"formik\";\r\nimport React, { memo } from \"react\";\r\nimport InputField from \"../InputField\";\r\nimport FillBtn from \"../Buttons/FillBtn\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Col, Container, Form, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadingScreen from \"../../HelperMethods/LoadingScreen\";\r\nimport Images from \"../../HelperMethods/Constants/ImgConstants\";\r\nimport { customLogout } from \"../../Redux/features/User/userSlice\";\r\nimport { changePassword } from \"../../Redux/features/User/userApi\";\r\nimport { TRAINEE_CHANGE_PASSWORD_URL } from \"../../utils/constants\";\r\nimport { CHANGE_PASSWORD_SCHEMA } from \"../ValidationData/validation\";\r\nimport { CHANGE_PASSWORD_INITIAL_VALUES } from \"../ValidationData/initialValue\";\r\n\r\nconst ResetPasswordForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { t, i18n } = useTranslation(\"\");\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  const handleChangePasswordSubmit = (values, resetForm) => {\r\n    const data = {\r\n      apiEndpoint: TRAINEE_CHANGE_PASSWORD_URL,\r\n      requestData: JSON.stringify(values),\r\n      navigate,\r\n    };\r\n    dispatch(changePassword(data)).then((res) => {\r\n      if (res.type === \"changePassword/fulfilled\") {\r\n        resetForm();\r\n        dispatch(customLogout());\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row\r\n        className={`justify-content-center text-black-custom align-items-md-center align-items-end ${i18n.dir()}`}\r\n      >\r\n        {loading === \"pending\" && <LoadingScreen />}\r\n        <Col lg={5} md={12} sm={10}>\r\n          <h1 className=\"text-center mb-5\">\r\n            {t(\"trainer.changePasswordText\")}\r\n          </h1>\r\n          <Formik\r\n            initialValues={{ ...CHANGE_PASSWORD_INITIAL_VALUES }}\r\n            validationSchema={CHANGE_PASSWORD_SCHEMA}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setSubmitting(true);\r\n              handleChangePasswordSubmit(values, resetForm);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n            }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <InputField\r\n                  type=\"password\"\r\n                  name=\"previous_password\"\r\n                  placeholder={t(\"changePassword.previousPasswordText\")}\r\n                  onChangeHandle={handleChange}\r\n                  onBlurHandle={handleBlur}\r\n                  value={values.previous_password}\r\n                  icon={\r\n                    <img src={Images.PASSWORD_ICON_IMG} alt=\"password-icon\" />\r\n                  }\r\n                  className={\r\n                    \"form-control-lg BorderRadiusInput py-3 px-5 mb-1 mt-1\"\r\n                  }\r\n                />\r\n                <p className=\"errorField\">\r\n                  {t(errors.previous_password) &&\r\n                    touched.previous_password &&\r\n                    t(errors.previous_password)}\r\n                </p>\r\n\r\n                <InputField\r\n                  type=\"password\"\r\n                  name=\"new_password\"\r\n                  placeholder={t(\"changePassword.newPasswordText\")}\r\n                  onChangeHandle={handleChange}\r\n                  onBlurHandle={handleBlur}\r\n                  value={values.new_password}\r\n                  icon={\r\n                    <img src={Images.PASSWORD_ICON_IMG} alt=\"password-icon\" />\r\n                  }\r\n                  className={\r\n                    \"form-control-lg BorderRadiusInput py-3 px-5 mb-1 mt-1\"\r\n                  }\r\n                />\r\n                <p className=\"errorField\">\r\n                  {t(errors.new_password) &&\r\n                    touched.new_password &&\r\n                    t(errors.new_password)}\r\n                </p>\r\n\r\n                <InputField\r\n                  type=\"password\"\r\n                  name=\"confirm_password\"\r\n                  placeholder={t(\"changePassword.confirmPasswordText\")}\r\n                  onChangeHandle={handleChange}\r\n                  onBlurHandle={handleBlur}\r\n                  value={values.confirm_password}\r\n                  icon={\r\n                    <img src={Images.PASSWORD_ICON_IMG} alt=\"password-icon\" />\r\n                  }\r\n                  className={\r\n                    \"form-control-lg BorderRadiusInput py-3 px-5 mb-1 mt-1\"\r\n                  }\r\n                />\r\n                <p className=\"errorField\">\r\n                  {t(errors.confirm_password) &&\r\n                    touched.confirm_password &&\r\n                    t(errors.confirm_password)}\r\n                </p>\r\n\r\n                <FillBtn\r\n                  className=\"w-100 py-3 mb-3 mt-5\"\r\n                  text={t(\"trainer.confirmText\")}\r\n                  type={t(\"trainer.submitText\")}\r\n                  handleOnClick={handleSubmit}\r\n                  disabled={loading === \"pending\" ? true : false}\r\n                />\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(ResetPasswordForm);\r\n","import React, { memo } from \"react\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport ResetPasswordForm from \"./ResetPasswordForm\";\r\n\r\nconst ResetPasswordWrapper = () => {\r\n  return (\r\n    <Container fluid className=\"mt-5\">\r\n      <Row>\r\n        <Col md={12} xs={12}>\r\n          <ResetPasswordForm />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(ResetPasswordWrapper);\r\n"],"names":["_jsx","Container","fluid","className","children","Row","Col","Card","ResetPasswordWrapper","ResetPasswordForm","navigate","useNavigate","dispatch","useDispatch","_useTranslation","useTranslation","t","i18n","loading","useSelector","state","user","_jsxs","concat","dir","LoadingScreen","lg","md","sm","Formik","initialValues","_objectSpread","CHANGE_PASSWORD_INITIAL_VALUES","validationSchema","CHANGE_PASSWORD_SCHEMA","onSubmit","values","_ref","setSubmitting","resetForm","data","apiEndpoint","TRAINEE_CHANGE_PASSWORD_URL","requestData","JSON","stringify","changePassword","then","res","type","customLogout","handleChangePasswordSubmit","_ref2","errors","touched","handleBlur","handleChange","handleSubmit","Form","InputField","name","placeholder","onChangeHandle","onBlurHandle","value","previous_password","icon","src","Images","PASSWORD_ICON_IMG","alt","new_password","confirm_password","FillBtn","text","handleOnClick","disabled","memo","xs"],"sourceRoot":""}